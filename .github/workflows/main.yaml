name: Continuous integration

on:
  push:
    branches:
      - master
    tags:
      - '*'
  pull_request:

permissions:
  packages: write
  # To publish package npmjs.org with provenance
  id-token: write
  # To be able to send a dispatch event
  contents: write

jobs:
  pre-commit:
    name: Pre-commit
    runs-on: ubuntu-24.04
    timeout-minutes: 15
    if: "!startsWith(github.event.head_commit.message, '[skip ci] ')"

    outputs:
      success: ${{ steps.success.outputs.success }}

    steps:
      - uses: actions/checkout@v5

      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - run: python3 -m pip install --requirement=.github/requirements.txt

      - uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}
          restore-keys: "pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}\npre-commit-"
      - run: pre-commit run --all-files --color=always
      - run: git diff --exit-code --patch > /tmp/pre-commit.patch; git diff --color; git reset --hard || true
        if: failure()
      - uses: actions/upload-artifact@v4
        with:
          name: Apply pre-commit fix.patch
          path: /tmp/pre-commit.patch
          retention-days: 1
        if: failure()

      - name: Print environment information
        run: c2cciutils-env

      - id: success
        run: echo "::set-output name=success::true"

  auto-upgrade:
    name: Auto-upgrade
    runs-on: ubuntu-24.04
    timeout-minutes: 15
    if: "!startsWith(github.event.head_commit.message, '[skip ci] ')"

    outputs:
      success: ${{ steps.success.outputs.success }}

    steps:
      - uses: actions/checkout@v5

      - run: npm install
      - run: npm run upgrade-storybook
      - run: sed --in-place 's/\"^/\"/g' package.json
      - run: npm install --package-lock-only
      - run: git diff --exit-code --patch > /tmp/auto-upgrade.patch; git diff --color; git reset --hard || true
      - uses: actions/upload-artifact@v4
        with:
          name: Storybook automatic migration.patch
          path: /tmp/auto-upgrade.patch
          retention-days: 1
        if: failure()

      - id: success
        run: echo "::set-output name=success::true"

  main:
    name: Continuous integration
    runs-on: ubuntu-24.04
    timeout-minutes: 15
    if: "!startsWith(github.event.head_commit.message, '[skip ci] ')"

    outputs:
      success: ${{ steps.success.outputs.success }}

    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - run: npm install
      - run: npm run check
      - run: npm run lint
      - run: npx chromatic --project-token ${{ secrets.CHROMATIC_PROJECT_TOKEN }}

      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - run: python3 -m pip install --requirement=.github/requirements.txt

      - run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NODE_AUTH_TOKEN }}" >> ~/.npmrc
      - name: Publish
        run: tag-publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: git diff --exit-code --patch > /tmp/dpkg-versions.patch; git diff --color; git reset --hard || true
        if: failure()
      - uses: actions/upload-artifact@v4.6.2
        with:
          name: Update dpkg versions list.patch
          path: /tmp/dpkg-versions.patch
          retention-days: 1
        if: failure()

      - id: success
        run: echo "::set-output name=success::true"

  success:
    name: Success
    runs-on: ubuntu-24.04
    timeout-minutes: 2
    needs:
      - pre-commit
      - auto-upgrade
      - main
    if: always()

    steps:
      - run: '[[ "${{ needs.pre-commit.outputs.success }}" == "true" ]]'
      - run: '[[ "${{ needs.auto-upgrade.outputs.success }}" == "true" ]]'
      - run: '[[ "${{ needs.main.outputs.success }}" == "true" ]]'
      - run: echo "Success"
